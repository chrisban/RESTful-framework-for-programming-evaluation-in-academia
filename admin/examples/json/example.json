{    
    "0": {
    	"questionType": "mchoice",
    	"language": "c++",
        "problem": "Given the following declarations, evaluate the following Boolean expressions:",
        "skeleton": "int x = 3, y = 5, z = 7;",
        "input": [ ["x >= y", ["True", "False"]],  ["x >= 0 && z < 10", ["True", "False"]], ["x >= 0 || z < 10", ["True", "False"]] ],
        "output": ["1", "0", "0"],
        "points": ["5", "5", "5"],
        "difficulty": "0"
    },
    "1": {
    	"questionType": "mchoice",
    	"language": "c++",
        "problem": "What does the following program print when the user enters the indicated values?   (NH means \"answer Not Here.\")",
        "skeleton": "#include <iostream>\nusing namespace std;\n\nint main(){}",
        "input": [ ["3 5 7", ["i = 3 j = 5 k = 7", "i = 3 j = 3 k = 7", "i = 5 j = 5 k = 7", "i = 3 j = 5 k = 5", "i = 3 j = 7 k = 7", "NH"]], ["3 5 5", ["i = 3 j = 5 k = 7", "i = 3 j = 3 k = 7", "i = 5 j = 5 k = 7", "i = 3 j = 5 k = 5", "i = 3 j = 7 k = 7", "NH"]] ],
        "output": ["0", "1"],
        "points": ["5", "5"],
        "difficulty": "0"
    },
    "2": {
    	"questionType": "code",
    	"language": "c++",
        "problem": "Write a C++ program that accepts a single integer value entered by the user. If the value entered is less than one, the...",
        "skeleton": "#include <iostream>\nusing namespace std;\n\nint main() {\n     int n;\n     cin >> n;\n}",
        "input": ["2"],
        "output": ["**\n**"],
        "points": ["15"],
        "difficulty": "0"
    },
    "3": {
    	"questionType": "code",
    	"language": "c++",
        "problem": "Complete the following function that counts the even numbers in an integer vector.",
        "skeleton": "#include <iostream>\nusing namespace std;\n\nint main(){}",
        "input": ["1", "2"],
        "output": ["11", "22"],
        "points": ["10", "10"],
        "difficulty": "1"
    },
    "4": {
    	"questionType": "code",
    	"language": "python",
        "problem": "In python, define and call a simple function that accepts and prints the word 'Student'.",
        "skeleton": "def greet(name):\n   print(name)\ngreet('Student')",
        "input": [""],
        "output": ["Student"],
        "points": ["10"],
        "difficulty": "0"
    },
    "prop": {
        "time": "45",
        "warn": ["10", "5"]
    }
}
